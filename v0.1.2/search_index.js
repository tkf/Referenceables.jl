var documenterSearchIndex = {"docs":
[{"location":"#Referenceables.jl","page":"Home","title":"Referenceables.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Referenceables]\nPrivate = false","category":"page"},{"location":"#Referenceables.Referenceables","page":"Home","title":"Referenceables.Referenceables","text":"Referenceables\n\n(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Codecov) (Image: Coveralls)\n\nReferenceables.jl provides an interface for readable and writable reference to an element of an array or dictionary.  The entry point function is referenceable.  Wrapping a container x yields a new view y = referenceable(x) to x where indexing to it yields a reference r = y[i].  This reference can be used to read value = r[] or write r[] = value a value.\n\nExamples\n\njulia> using Referenceables\n\njulia> x = collect(reshape(1:6, (2, 3)))\n       y = referenceable(x);\n\njulia> r = y[1, 1] :: Ref\n↪1\n\njulia> r[] = 100;\n\njulia> x\n2×3 Array{Int64,2}:\n 100  3  5\n   2  4  6\n\n\n\n\n\n","category":"module"},{"location":"#Referenceables.referenceable","page":"Home","title":"Referenceables.referenceable","text":"referenceable(x::AbstractArray{T}) :: AbstractArray{<:Ref{T}}\nreferenceable(x::AbstractDict{K, V}) :: AbstractDict{K, <:Ref{V}}\n\nreferenceable(x) converts a collection x to a wrapped container where indexing to it produces a reference, not the value.\n\njulia> using Referenceables\n\njulia> x = collect(reshape(1:6, (2, 3)))\n       y = referenceable(x);\n\njulia> r = y[1] :: Ref\n↪1\n\njulia> r[] = 100;\n\njulia> x\n2×3 Array{Int64,2}:\n 100  3  5\n   2  4  6\n\nwarning: Warning\nInbound check is done when indexing the referenceable(x) container, not during de-referencing r[].  It means that passing the reference r to unknown code can result in a segmentation fault if the original container x is mutated afterwards.\n\nreferenceable works with dictionaries as well:\n\njulia> x = Dict()\n       y = referenceable(x);\n\njulia> r = y[1] :: Ref\n       r[] = 100;\n\njulia> x\nDict{Any,Any} with 1 entry:\n  1 => 100\n\n\n\n\n\n","category":"function"},{"location":"internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Modules = [Referenceables]\nPublic = false","category":"page"},{"location":"internals/#Referenceables.RefIndexable","page":"Internals","title":"Referenceables.RefIndexable","text":"RefIndexable{inbounds}(x, i::Tuple) where {inbounds isa Bool} <: Ref{valtype(x)}\n\nLike Base.RefArray, but works with arbitrary containers and indices.\n\n\n\n\n\n","category":"type"}]
}
